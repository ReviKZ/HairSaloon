// <auto-generated />
using System;
using HairSaloonAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HairSaloonAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250105165155_AddAdminUser")]
    partial class AddAdminUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HairSaloonAPI.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("HairDresserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Verified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.HasIndex("HairDresserId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("HairSaloonAPI.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmailAddress = "hd@test.com",
                            FirstName = "hair",
                            Gender = 0,
                            LastName = "dresser",
                            PhoneNumber = "0101",
                            Type = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("HairSaloonAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 0, 23, 121, 251, 134, 134, 208, 177, 3, 14, 123, 73, 191, 195, 249, 55, 198, 62, 218, 82, 98, 214, 227, 39, 0, 94, 17, 3, 226, 204, 149, 164, 73, 180, 17, 232, 170, 119, 141, 41, 222, 170, 26, 141, 111, 32, 148, 70, 6, 173, 105, 12, 186, 11, 236, 92, 24, 35, 95, 168, 231, 68, 139, 123 },
                            PasswordSalt = new byte[] { 218, 120, 55, 222, 161, 21, 56, 182, 129, 185, 55, 144, 109, 233, 211, 78, 91, 63, 205, 30, 162, 71, 250, 11, 124, 63, 188, 120, 35, 167, 203, 80, 86, 193, 153, 134, 149, 165, 12, 206, 254, 54, 57, 52, 235, 94, 224, 249, 216, 121, 121, 77, 83, 94, 221, 235, 136, 79, 216, 61, 172, 181, 246, 38, 33, 34, 241, 20, 103, 132, 63, 6, 21, 166, 218, 254, 113, 233, 127, 172, 68, 98, 16, 244, 226, 7, 130, 76, 233, 160, 70, 204, 59, 37, 22, 90, 219, 118, 226, 17, 126, 254, 143, 82, 241, 227, 127, 2, 99, 237, 83, 183, 5, 2, 44, 244, 171, 8, 117, 239, 88, 231, 16, 10, 110, 79, 17, 43 },
                            Token = "106DAE1AD0DFA92F1E9D246B1DA2943C3F96AE9AD41FCFB5DC4E9EDD9C33BA95A79A4429937FA39F4E1FCD1BB8BB3F3D238057D9A1A68D52F31045BE829BFC73",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("HairSaloonAPI.Models.Appointment", b =>
                {
                    b.HasOne("HairSaloonAPI.Models.Person", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HairSaloonAPI.Models.Person", "HairDresser")
                        .WithMany()
                        .HasForeignKey("HairDresserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("HairDresser");
                });

            modelBuilder.Entity("HairSaloonAPI.Models.Person", b =>
                {
                    b.HasOne("HairSaloonAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
